@page "/SubmitCustom"
@using System.Text
@using System.Text.RegularExpressions

<textarea @bind="_input"></textarea>
<p>@_output</p>
<button @onclick="Parse">Parse</button>

@code {
    private string _input = "";
    private string _output = "";

    private void Parse()
    {
        string text = _input;
        text = text.Replace(@"/$[", "\u0011");
        text = text.Replace(@"]$\", "\u0011");
        string[] str = text.Split('\u0011');
        foreach (string s in str) Console.WriteLine(s);
        Console.WriteLine(str.Length);

        var data = new StringBuilder();
        for (var i = 0; i < str.Length; ++i)
        {
            if (i % 2 == 0)
            {
                data.Append(str[i]);
                data.Append("\u001f");
                data.Append("0");
                data.Append("\u001f");
                data.Append("-1");
                data.Append("\u001e");
            }
            else
            {
                data.Append(str[i]);
                data.Append("\u001f");
                data.Append("1");
                data.Append("\u001f");
                data.Append(str[i].Length + 2);
                data.Append("\u001e");
            }
        }
        
        // remove last char (should always be \u001E)
        data.Remove(data.Length - 1, 1);
        data.Replace("\n", "\\n").Replace("\"", "\\\"");

        string res = Regex.Replace(data.ToString(), "[\u0000-\u001F\u007F-\uFFFF]", match =>
        {
            int codepoint = (int) match.Value[0];
            return $"\\u{codepoint:X4}";
        });

        _output = $"\"{res}\"";
    }

}