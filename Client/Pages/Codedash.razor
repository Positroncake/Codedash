@page "/Codedash/{hexdump}"
@inject HttpClient HttpClient
@using codedash.Shared
@using Microsoft.AspNetCore.Components

<span style="white-space: pre">Input sequence:</span>
<button @onclick="Parse">Parse</button>

<pre id="codedash-problem">
@{ var c = 0;}
@foreach (ProblemBlock i in pbs)
{
    if (i.IsInput)
    {
        <input @bind="inputs[c]" size="@i.FieldLength.ToString()"/>
        c++;
    }
    else
    {
        <span style="white-space: pre">@i.Content</span>
    }
}
</pre>

<button @onclick="Submit">Submit</button>

@code {
    [Parameter] public string? hexdump { get; set; }
    private static string tempSequence = "for i in range(6):\u000a    print(\u001f0\u001f-1\u001e\"ay\"\u001f1\u001f6\u001e, end='')\u000aprint('9')\u000a\u000aprint('ay' * 64 + '9')\u001f0\u001f-1";
    
    // "ay" problem: 27aad10f-f8d2-4a4a-ab84-351eec0244e0
    
    [Parameter]
    [SupplyParameterFromQuery(Name = "id")]
    public string? id { get; set; }

    private string title = "";
    private List<ProblemBlock> pbs = new();
    private List<string> inputs = new();

    protected override async Task OnInitializedAsync()
    {
        HttpResponseMessage response = await HttpClient.GetAsync($"ProblemApi/Get/{id}");
        Problem p = (await response.Content.ReadFromJsonAsync<Problem>())!;
        Console.WriteLine(id);
        
        title = p.Title!;
        pbs = ProblemBlock.ParseProblemString(p.Chunks!);
        // Resize input list to match
        inputs.Resize(pbs.Aggregate(0, (curr, next) => next.IsInput? curr + 1 : curr), "");
        
    }

    private void Submit()
    {
        foreach (string input in inputs) Console.WriteLine($"Input: {input}.");
        SendToController().Wait();
    }

    private async Task SendToController()
    {
        HttpResponseMessage response = await HttpClient.PostAsJsonAsync($"ProblemApi/Verify/{id}", inputs);
        List<int> results = response.Content.ReadFromJsonAsync<List<int>>().Result!;
        foreach (int x in results) Console.WriteLine(x);
    }

}