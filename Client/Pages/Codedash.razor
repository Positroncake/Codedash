@page "/Codedash"
@inject HttpClient HttpClient
@using codedash.Shared
@using Microsoft.AspNetCore.Components
@using codedash.Client.Data

<h2 align="center">@title</h2>
<style> 
input[type~="text"], textarea{
  width: 10%;
  padding: 2px 10px;
  box-sizing: border-box;
  border: none;
  border-bottom: 3px solid green;
}
</style>
<div align="center">
    <pre id="codedash-problem">
    @{ int c = 0;}
    <div align="left">
        @foreach (var i in pbs)
        {
            if (i.IsInput)
            {
                <input type="text"@bind="inputs[c]" size="@i.FieldLength"/>
                c++;
            }
            else
            {
                <span style="font-size:18px; font-family:'Source Code Pro'">
                    <span style="white-space: pre">@i.Content</span>
                </span>
            }
        }
    </div>
    </pre>
    <button @onclick="Submit" class="btn btn-primary mt-3 align-self-end">Submit!</button>

</div>

@code {
    private static string tempSequence = "for i in range(6):\u000a    print(\u001f0\u001f-1\u001e\"ay\"\u001f1\u001f6\u001e, end='')\u000aprint('9')\u000a\u000aprint('ay' * 64 + '9')\u001f0\u001f-1";
    
    // "ay" problem: 27aad10f-f8d2-4a4a-ab84-351eec0244e0
    
    [Parameter]
    [SupplyParameterFromQuery(Name = "id")]
    public string? id { get; set; }

    private string title = "";
    private List<ProblemBlock> pbs = new();
    private List<string> inputs = new();

    protected override async Task OnInitializedAsync()
    {
        HttpResponseMessage response = await HttpClient.GetAsync($"ProblemApi/Get/{id}");
        var p = (await response.Content.ReadFromJsonAsync<Problem>())!;
        Console.WriteLine(id);
        
        title = p.Title!;
        pbs = ProblemBlock.ParseProblemString(p.Chunks!);
        // Resize input list to match
        inputs.Resize(pbs.Aggregate(0, (curr, next) => next.IsInput? curr + 1 : curr), "");
        
    }

    private async void Submit()
    {
        HttpResponseMessage response = await HttpClient.PostAsJsonAsync($"ProblemApi/Verify/{id}", inputs);
        Console.WriteLine(await response.Content.ReadAsStringAsync());
    // List<int> results = response.Content.ReadFromJsonAsync<List<int>>().Result!;
        // foreach (int x in results) Console.WriteLine(x);
    }

}