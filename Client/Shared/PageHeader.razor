@using Blazored.LocalStorage
@using Microsoft.AspNetCore.Components
@inject ILocalStorageService _localStorage
@inject NavigationManager _navigationManager

<nav class="navbar navbar-expand-md navbar-dark bg-dark w-100 px-2">
    <div class="container-fluid justify-content-start">
        <a class="navbar-brand">Codedash</a>
        <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbar-collapsible">
            <span class="navbar-toggler-icon" style="color: black"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbar-collapsible">
            <ul class="navbar-nav me-auto">
                <li class="nav-item">
                    <a class="nav-link" href="/">Home</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link"
                       href="/Codedash">
                        Play
                    </a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="/submitcustom">Custom</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="/listing">Listing</a>
                </li>
            </ul>
            <ul class="navbar-nav ms-auto">
                <li class="nav-item me-0 @(_userNotLoggedIn ? "" : "d-none")">
                    <a class="nav-link" href="/register">Register</a>
                </li>
                <li class="nav-item me-0 @(_userNotLoggedIn ? "" : "d-none")">
                    <a class="nav-link" href="/login">Login</a>
                </li>
                <li class="nav-item me-0 @(!_userNotLoggedIn ? "" : "d-none")">
                    <a class="nav-link" href="/logout">Logout</a>
                </li>
                <li class="nav-item me-0 @(!_userNotLoggedIn ? "" : "d-none")">
                    <a class="nav-link" href="/accountpage">My account</a>
                </li>
            </ul>
        </div>
    </div>
</nav>

@code {
    private static bool _userNotLoggedIn = false;

#pragma warning disable CS1998
    protected override async Task OnInitializedAsync()
#pragma warning restore CS1998
    {
        _navigationManager.LocationChanged += (_, _) => CheckState();
    }

    private async void CheckState()
    {
        _userNotLoggedIn = !await _localStorage.ContainKeyAsync("loginToken");
        await Task.Delay(0);
        StateHasChanged();
    }

}